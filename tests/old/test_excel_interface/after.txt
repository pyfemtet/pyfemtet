Sub FemtetMain()
    '------- Femtet自動起動 (不要な場合やExcelで実行しない場合は下行をコメントアウトしてください) -------
    'Workbooks("FemtetRef.xla").AutoExecuteFemtet

    '------- 新規プロジェクト -------
    If Femtet.OpenNewProject() = False Then
        Femtet.ShowLastError
    End If

    '------- 変数の定義 -------
    InitVariables

    '------- データベースの設定 -------
    AnalysisSetUp
    BodyAttributeSetUp
    MaterialSetUp
    BoundarySetUp

    '------- モデルの作成 -------
    Set Gaudi = Femtet.Gaudi
    MakeModel

    '------- 標準メッシュサイズの設定 -------
    '<<<<<<< 自動計算に設定する場合は-1を設定してください >>>>>>>
    Gaudi.MeshSize = -1

    '------- プロジェクトの保存 -------
    Dim ProjectFilePath As String
    ProjectFilePath = ThisWorkbook.Path + "\sample"  ' この excel ファイルからの相対位置で記載することをお勧めします。（並列処理への拡張が容易なため）
    '<<<<<<< プロジェクトを保存する場合は以下のコメントを外してください >>>>>>>
    If Femtet.SaveProject(ProjectFilePath & ".femprj", True) = False Then
        Femtet.ShowLastError
    End If

    '------- メッシュの生成 -------
    '<<<<<<< メッシュを生成する場合は以下のコメントを外してください >>>>>>>
    Gaudi.Mesh

    '------- 解析の実行 -------
    '<<<<<<< 解析を実行する場合は以下のコメントを外してください >>>>>>>
    Femtet.Solve

    '------- 解析結果の抽出 -------
    '<<<<<<< 計算結果を抽出する場合は以下のコメントを外してください >>>>>>>
    SamplingResult

    '------- 計算結果の保存 -------
    '<<<<<<< 計算結果(.pdt)ファイルを保存する場合は以下のコメントを外してください >>>>>>>
    If Femtet.SavePDT(Femtet.ResultFilePath & ".pdt", True) = False Then
        Femtet.ShowLastError
    End If

End Sub


Sub MakeModel()

    '------- 変数の設定 -------
    Dim w, d, h As Double
    w = shInput.Range("w").Value
    d = shInput.Range("d").Value
    h = shInput.Range("h").Value

    '------- Body配列変数の定義 -------
    Dim Body() As CGaudiBody

    '------- モデルを描画させない設定 -------
    FEMTET.RedrawMode = False


    '------- CreateBox -------
    ReDim Preserve Body(0)
    Dim Point0 As New CGaudiPoint
    Point0.SetCoord 0#, 0#, 0#
    Set Body(0) = Gaudi.CreateBox(Point0, w, d, h)

    '------- SetName -------
    Body(0).SetName "ボディ属性_001", "材料定数_001"

    '------- SetBoundary -------
    Dim Face0 As CGaudiFace
    Set Face0 = Body(0).GetFaceByID(33)
    Face0.SetBoundary "fix"

    '------- SetBoundary -------
    Dim Face1 As CGaudiFace
    Set Face1 = Body(0).GetFaceByID(27)
    Face1.SetBoundary "pressure"

    '------- ChangeBoundary -------
    Dim Face2 As CGaudiFace
    Set Face2 = Body(0).GetFaceByID(27)
    Face2.ChangeBoundary "pressure", "load"


    '------- モデルを再描画します -------
    FEMTET.Redraw

End Sub


Sub SamplingResult()

    '------- 変数にオブジェクトの設定 -------
    Set Gogh = Femtet.Gogh

    '------- 現在の計算結果を中間ファイルから開く -------
    If Femtet.OpenCurrentResult(True) = False Then
        Femtet.ShowLastError
    End If

    '------- フィールドの設定 -------
    Gogh.Galileo.Vector = GALILEO_DISPLACEMENT_C

    '------- 最大値の取得 -------
    Dim PosMax() As Double '最大値の座標
    Dim ResultMax As Double ' 最大値

    If Gogh.Galileo.GetMAXVectorPoint(VEC_LENGTH_C, CMPX_REAL_C, PosMax, ResultMax) = False Then
        Femtet.ShowLastError
    End If

    '------- 最小値の取得 -------
    Dim PosMin() As Double '最小値の座標
    Dim ResultMin As Double '最小値

    If Gogh.Galileo.GetMINVectorPoint(VEC_LENGTH_C, CMPX_REAL_C, PosMin, ResultMin) = False Then
        Femtet.ShowLastError
    End If

    '------- 任意座標の計算結果の取得 -------
    Dim Value() As New CComplex

    If Gogh.Galileo.GetVectorAtPoint(5, 5, 4.5, Value()) = False Then
        Femtet.ShowLastError
    End If

    ' 複数の座標の結果をまとめて取得する場合は、MultiGetVectorAtPoint関数をご利用ください。

    ' 計算結果をシートに記載します。
    shOutput.Range("最大変位").Value = ResultMax
    shOutput.Range("原点変位").Value = Value(0).Real

End Sub